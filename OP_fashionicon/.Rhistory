doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%distinct(room)%>%count(room)%>%arrange(desc(n))
doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
doublefull_detail%>%filter(room==22315520)
doublefull_detail%>%filter(room==22315520)%>%View()
doublefull_detail%>%filter(room==2680920)%>%View()
doubleorderd_allorders%>%filter(room==2680920)%>%View()
roomsample <- 9676447
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
reopenroom <- doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
inner_join(doubleorderd_allorders,reopenroom,by=c("room"="room"))
reopenroom
doubleorderd_allorders
inner_join(x= doubleorderd_allorders, y = reopenroom, by=c("room"="room"))
totalreopenorders <- inner_join(x= doubleorderd_allorders, y = reopenroom, by=c("room"="room"))
totalreopenorders
View(doublefull_detail)
View(doubleorderd_detail)
View(doubleorderd_fullorders)
doubleorderd_fullorders_path='D:/project/DoubleFullroomAnalysis/doubleorder_fullroom.txt'
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 满房订单数据
doublefull_detail%>%count(duration<15)
roomsample <- 22315520
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doublefull_detail%>%filter(room==roomsample)%>%View()
reopenroom <- doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
reopenroom
roomsample <- 22315520
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
roomsample <- 2680920
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doublefull_detail%>%filter(room==roomsample)%>%View()
roomsample <- 10126174
doublefull_detail%>%filter(room==roomsample)%>%View()
roomsample <- 2826
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%arrange(desc(orderdate))%>%View()
reopenroom%>%filter(room==roomsample)%>%View()
names(doubleorderd_fullorders)
doubleorderd_fullorders%>%count(isforceorder)
doubleorderd_fullorders%>%count(isforceorder)%>%mutate(pct=n/sum(n))
isforceorderstat <- doubleorderd_fullorders%>%count(isforceorder)%>%mutate(pct=n/sum(n))
names(doubleorderd_fullorders)
doubleorderd_fullorders%>%filter(rn>1)%>%distinct(room)
doubleorderd_fullorders%>%filter(rn>1)%>%distinct(room)%>%count()
doubleorderd_fullorders%>%filter(rn>1, isforceorder==TRUE)%>%distinct(room)%>%count()
doubleorderd_fullorders%>%filter(rn>1, isforceorder==T)%>%distinct(room)%>%count()
isforceorderstat
doubleorderd_fullorders%>%filter(rn>1, isforceorder=='T')%>%distinct(room)%>%count()
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(room,n)%>%mutate(pct=n/sum(n))
)
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(room,n))%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(isforceorder))%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(ismajia)%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(isforceorder))%>%mutate(pct=n/sum(n))
isforceorderstat <- doubleorderd_fullorders%>%count(isforceorder)%>%mutate(pct=n/sum(n))
isforceorderstat
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)%>%mutate(pct=n/sum(n))
doubleorderd_detail%>%distinct(room)%>%count()
doublefull_room <- filter(doubleorderd_fullorders, rn>=2)%>%distinct(room)%>%select(room)
doublefull_room
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(isforceorder))%>%mutate(pct=n/sum(n))
head(doubleorderd_fullorders,1000)%>%View()
doubleorderd_duration%>%count(duration)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
doublefull_room <- filter(doubleorderd_fullorders, rn>=2)%>%distinct(room)%>%select(room)
doublefull_room
doublefull_detail <- inner_join(x = doubleorderd_detail, y = doublefull_room, by = c("room"="room"), copy =F)
doublefull_detail
doublefull_detail%>%distinct(room)%>%count()
doublefull_room <- filter(doubleorderd_fullorders, rn>=2)%>%distinct(room)%>%select(room)
doublefull_room
doublefull_detail <- inner_join(x = doubleorderd_detail, y = doublefull_room, by = c("room"="room"), copy =F)
doublefull_room <- filter(doubleorderd_fullorders, rn>=2, isforceorder!='T')%>%distinct(room)%>%select(room)
doublefull_room <- filter(doubleorderd_fullorders, rn>=2, isforceorder!='T')%>%distinct(room)%>%select(room)
doublefull_room <- filter(doubleorderd_fullorders, rn>=2)%>%distinct(room)%>%select(room)
doublefull_detail <- inner_join(x = doubleorderd_detail, y = doublefull_room, by = c("room"="room"), copy =F)
doublefull_detail%>%distinct(room)%>%count()
View(doublefull_detail)
reopenroom <- doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
reopenroom
doubleorderd_fullorders%>%filter(rn>1)%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1, ismajia='T')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1, ismajia=='T')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%count(ismajia)
doubleorderd_fullorders%>%filter(rn>1, ismajia=='true')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
View(doubleorderd_detail)
doublefull_detail <- inner_join(x = doubleorderd_detail, y = doublefull_room, by = c("room"="room"), copy =F)
doublefull_detail%>%distinct(room)%>%count()
View(doublefull_detail)
doublefull_detail <- doublefull_detail%>%mutate(duration=difftime(as.POSIXct(operatetime, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(begindate, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration = as.numeric(duration))
summary(doublefull_detail$duration)
doublefull_detail%>%count(duration<15)
doublefull_detail%>%count(duration<10)%>%mutate(pct=n/sum(n))
doublefull_detail%>%count(duration<10&duration>5)%>%mutate(pct=n/sum(n))
doublefull_detail%>%count(duration>5)%>%mutate(pct=n/sum(n))
doublefull_detail%>%count(duration>3)%>%mutate(pct=n/sum(n))
doublefull_detail%>%filter(new_roomstatus='N'&)%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus=='N'&)%>%distinct(room)%>%count()
doubleorderd_duration%>%count(duration)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
doubleorderd_duration%>%View()
doublefull_detail%>%filter(new_roomstatus=='N'&)%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus=='N')%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus=='N')%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus=='N')%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus=='N')
doublefull_detail%>%filter(new_roomstatus=='N')%>%View()
doublefull_detail%>%filter(new_roomstatus=='N')%>%View()
seq_along
ave
doublefull_detail%>%filter(new_roomstatus=='N')%>%View()
doublefull_detail%>%filter(new_roomstatus=='N')%>%count(room)%>%View()
doublefull_detail%>%filter(new_roomstatus=='N')%>%count(room)%>%arrange(desc(n))%>%View()
doublefull_detail%>%filter(new_roomstatus=='N',room==22315520)%>%arrange(desc(n))%>%View()
doublefull_detail%>%filter(new_roomstatus=='N'&room==22315520)%>%arrange(desc(n))%>%View()
doublefull_detail%>%filter(new_roomstatus=='N'& room==22315520)%>%View()
ggplot(data = doublefull_detail)+geom_histogram(aes(duration))
doubleorderd_duration%>%View()
doubleorderd_duration%>%count(duration)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
isforceorderstat
doubleorderd_duration%>%ggplot()+geom_bar(aes(duration))
doubleorderd_duration%>%ggplot()+geom_bar(aes(duration))+ggtitle("closed duration between 2orders")
isforceorderstat
doubleorderd_fullorders%>%filter(isforceorder=='T')
forceorderid <- doubleorderd_fullorders%>%filter(isforceorder=='T')
isforceorderstat
roomsample <- 2321626904
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%arrange(desc(orderdate))%>%View()
reopenroom%>%filter(room==roomsample)%>%View()
roomsample <- 5266753
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_allorders%>%filter(room==roomsample)%>%arrange(desc(orderdate))%>%View()
reopenroom%>%filter(room==roomsample)%>%View()
roomsample <- 5266753
doublefull_detail%>%filter(room==roomsample)%>%View()
doubleorderd_detail <- fread(input = doubleorderd_detail_path, header = T, sep = '\t', na.strings = 'NULL') 　# 房态操作日志大全；　
doubleorderd_duration <- fread(input = doubleorderd_duration_path, header = T, sep = '\t', na.strings = 'NULL') # 两次满房时间间隔；
doubleorderd_allorders<- fread(input = doubleorderd_allorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有有过满房订单对应的所有订单数据
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
doubleorderd_detail <- fread(input = doubleorderd_detail_path, header = T, sep = '\t', na.strings = 'NULL') 　# 房态操作日志大全；　
doubleorderd_duration <- fread(input = doubleorderd_duration_path, header = T, sep = '\t', na.strings = 'NULL') # 两次满房时间间隔；
doubleorderd_allorders<- fread(input = doubleorderd_allorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有有过满房订单对应的所有订单数据
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
doubleorderd_detail <- fread(input = doubleorderd_detail_path, header = T, sep = '\t', na.strings = 'NULL') 　# 房态操作日志大全；　
doubleorderd_duration <- fread(input = doubleorderd_duration_path, header = T, sep = '\t', na.strings = 'NULL') # 两次满房时间间隔；
doubleorderd_allorders<- fread(input = doubleorderd_allorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有有过满房订单对应的所有订单数据
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
isforceorderstat <- doubleorderd_fullorders%>%count(isforceorder)%>%mutate(pct=n/sum(n))
isforceorderstat
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1, ismajia=='true')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_detail <- fread(input = doubleorderd_detail_path, header = T, sep = '\t', na.strings = 'NULL') 　# 房态操作日志大全；　
doubleorderd_duration <- fread(input = doubleorderd_duration_path, header = T, sep = '\t', na.strings = 'NULL') # 两次满房时间间隔；
doubleorderd_allorders<- fread(input = doubleorderd_allorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有有过满房订单对应的所有订单数据
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
isforceorderstat <- doubleorderd_fullorders%>%count(isforceorder)%>%mutate(pct=n/sum(n))
isforceorderstat
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)%>%mutate(pct=n/sum(n))
doubleorderd_duration <- doubleorderd_duration%>%mutate(duration=difftime(as.POSIXct(enddate, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(begindate, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration = as.numeric(duration))
doubleorderd_duration%>%ggplot()+geom_bar(aes(duration))+ggtitle("duration between 2 not_available orders")
doubleorderd_detail%>%filter(new_roomstatus!='N', !is.na(old_roomstatus))%>%head()%>%View()
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder)%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1, ismajia=='true')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1)%>%count(isforceorder,room)%>%arrange(desc(isforceorder))%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%filter(rn>1, ismajia=='true')%>%distinct(room)%>%count()%>%mutate(pct=n/sum(n))
doubleorderd_fullorders%>%head()%>%View()
doubleorderd_fullorders%>%head(50)%>%View()
doubleorderd_detail%>%head(50)%>%View()
doubleorderd_fullorders%>%filter(isforceorder)%>%count(isoutcall)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(isoutcall)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(isoutcall,isstraingconnect)
names(doubleorderd_fullorders)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(isoutcall,isstraightconnect)
names(doubleorderd_fullorders)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(isoutcall,isholdroom)
names(doubleorderd_fullorders)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(isovernight)
doubleorderd_fullorders%>%filter(isforceorder=='T')%>%count(submitfrom)
sub
names(doubleorderd_fullorders)
doublefull_detail <- doublefull_detail%>%mutate(duration_speed=difftime(as.POSIXct(operatetime, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(outcallfinishtime, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration_speed = as.numeric(duration_speed))
names(doublefull_detail)
doubleorderd_detail <- fread(input = doubleorderd_detail_path, header = T, sep = '\t', na.strings = 'NULL') 　# 房态操作日志大全；　
doubleorderd_duration <- fread(input = doubleorderd_duration_path, header = T, sep = '\t', na.strings = 'NULL') # 两次满房时间间隔；
doubleorderd_allorders<- fread(input = doubleorderd_allorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有有过满房订单对应的所有订单数据
doubleorderd_fullorders <- fread(input = doubleorderd_fullorders_path, header = T, sep = '\t', na.strings = 'NULL') # 所有的满房订单数据
doublefull_detail <- inner_join(x = doubleorderd_detail, y = doublefull_room, by = c("room"="room"), copy =F)
# 查看一下关房速度；
doublefull_detail <- doublefull_detail%>%mutate(duration=difftime(as.POSIXct(operatetime, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(begindate, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration = as.numeric(duration))
doublefull_detail <- doublefull_detail%>%mutate(duration_speed=difftime(as.POSIXct(operatetime, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(outcallfinishtime, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration_speed = as.numeric(duration_speed))
summary(doublefull_detail$duration_speed)
doublefull_detail%>%filter()%>%count(duration>3)%>%mutate(pct=n/sum(n))
ggplot(data = doublefull_detail)+geom_bar(aes(duration_speed))
ggplot(data = doublefull_detail)+geom_histogram(aes(duration_speed))
doubleorderd_duration <- doubleorderd_duration%>%mutate(duration=difftime(as.POSIXct(enddate, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(begindate, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration = as.numeric(duration))
doubleorderd_duration
doubleorderd_allorders%>%head()
doubleorderd_allorders%>%head()%>%View()
doubleorderd_allorders%>%filter(room==236)
doubleorderd_detail%>%filter(room==236)
doubleorderd_fullorders%>%filter(room==236)
doubleorderd_fullorders%>%filter(room==236)%>%View()
holdroomorder <- doubleorderd_fullorders%>%count(isholdroom)
holdroomorder
holdroomorder <- doubleorderd_fullorders%>%count(isholdroom)%>%mutate(pct=n/sum(n))
holdroomorder
doubleorderd_fullorders%>%filter(isholdroom ='TRUE')
doubleorderd_fullorders%>%filter(isholdroom =='TRUE')
doubleorderd_fullorders%>%filter(isholdroom =='TRUE')%>%View()
doublefull_detail <- doublefull_detail%>%mutate(duration_outcall=difftime(as.POSIXct(outcallfinishtime, format = "%Y-%m-%d %H:%M", tz = "GMT"), as.POSIXct(orderdate, format = "%Y-%m-%d %H:%M", tz = "GMT"), unit = "min")
,duration_outcall = as.numeric(duration_outcall))
ggplot(data = doublefull_detail)+geom_histogram(aes(duration_outcall))
ggplot(data = doublefull_detail)+geom_density(aes(duration_outcall))
doublefull_detail%>%filter()%>%count(duration>3)%>%mutate(pct=n/sum(n))
ggplot(data = doublefull_detail)+geom_histogram(aes(duration))
ggplot(data = doublefull_detail)+geom_histogram(aes(duration_outcall))
doublefull_detail <- doublefull_detail%>%mutate(eid_trans = gsub(pattern = "^(ORD&|DHS&).*", replacement = "DHS", x = eid)
,eid_trans = gsub(pattern = "^EBK&.*", replacement = "EBK", x = eid_trans)
,eid_trans = gsub(pattern = "^MIP&.*", replacement = "MIP", x = eid_trans)
,eid_trans = gsub(pattern = "^GNZL_.*", replacement = "GNZL", x = eid_trans)
,eid_trans = gsub(pattern = "^RoomStatusRelation.*", replacement = "RoomStatusRelation", x = eid_trans)
)
eiddistribute <- doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(eid_trans)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
eiddistribute
doublefull_detail%>%head()%>%View()
eiddistribute <- doublefull_detail%>%filter(new_roomstatus!='N',rn_oper==2)%>%count(eid_trans)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
eiddistribute
eiddistribute <- doublefull_detail%>%filter(new_roomstatus!='N',rn_oper>=2)%>%count(eid_trans)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
eiddistribute
reopenroom <- doublefull_detail%>%filter(new_roomstatus!='N',old_roomstatus=='N')%>%count(room)%>%arrange(desc(n))
reopenroom
ggplot(doublefull_detail)+geom_bar(aes(x=eid_trans))
eiddistribute
View(eiddistribute)
doublefull_detail%>%distinct(room)
doublefull_detail%>%distinct(room)%>%count()
doublefull_detail%>%filter(new_roomstatus!='N')%>%distinct(room)%>%count()
eiddistribute <- doublefull_detail%>%filter(new_roomstatus!='N')%>%count(eid_trans)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
eiddistribute
View(eiddistribute)
eiddistribute <- doublefull_detail%>%filter(new_roomstatus!='N', rn_oper == 2)%>%count(eid_trans)%>%arrange(desc(n))%>%mutate(pct=n/sum(n))
View(eiddistribute)
doublefull_detail%>%filter(new_roomstatus!='N')%>%distinct(room)%>%count()
data(agaricus.train, package='xgboost')
data(agaricus.test, package='xgboost')
train <- agaricus.train
test <- agaricus.test
bst <- xgboost(data = train$data, label = train$label, max.depth = 2,
eta = 1, nthread = 2, nround = 2,objective = "binary:logistic")
# save the model in file 'xgb.model.dump'
xgb.dump(bst, 'xgb.model.dump', with.stats = TRUE)
# print the model without saving it to a file
print(xgb.dump(bst))
library(xgboost)
library(xgboost)
data(agaricus.train, package='xgboost')
data(agaricus.test, package='xgboost')
train <- agaricus.train
test <- agaricus.test
bst <- xgboost(data = train$data, label = train$label, max.depth = 2,
eta = 1, nthread = 2, nround = 2,objective = "binary:logistic")
# save the model in file 'xgb.model.dump'
xgb.dump(bst, 'xgb.model.dump', with.stats = TRUE)
# print the model without saving it to a file
print(xgb.dump(bst))
library(xgboost)
data(agaricus.train, package='xgboost')
data(agaricus.test, package='xgboost')
train <- agaricus.train
test <- agaricus.test
bst <- xgboost(data = train$data, label = train$label, max.depth = 2,
eta = 1, nthread = 8, nround = 100,objective = "binary:logistic")
# save the model in file 'xgb.model.dump'
xgb.dump(bst, 'xgb.model.dump', with.stats = TRUE)
# print the model without saving it to a file
print(xgb.dump(bst))
xgb.importance(bst)
names(train)
xgb.importance(model = bst, feature_names = train$data@Dimnames[[2]], model = bst )
xgb.importance(model = bst, feature_names = train$data@Dimnames[[2]])
print(xgb.dump(bst))
xgb.importance(model = bst, feature_names = train$data@Dimnames[[2]])
train$data@Dimnames[[2]]
xgb.importance(model = bst, feature_names = train$data@Dimnames[[2]])
importance_matrix <- xgb.importance(model = bst, feature_names = train$data@Dimnames[[2]])
xgb.plot.importance(importance_matrix)
xgb.plot.tree(agaricus.train$data@Dimnames[[2]], model = bst)
agaricus.train
head(agaricus.train,10)
getwd()
setwd('D:/project/【SRV】网红项目/')
getwd()
eid_detail <- read.csv(file = './data/emp_id.csv')
eid_info <- read.csv(file = './data/emp_id.csv', header = T, sep = ",")
eid_info <- data.table::fread(input =  = './data/emp_id.csv', sep = ",", na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_id.csv', sep = ",", na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_id.csv', sep = "\t", na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_id.csv',  na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_info.csv', na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_info.csv', na.strings = "NULL")
eid_info <- data.table::fread(input = './data/emp_info.csv', na.strings = c("NULL", "NA", NA))
uid_info <- data.table::fread(input = './data/uid_info.csv', na.strings = c("NULL", "NA", NA))
uid_op_services <- data.table::fread(input = './data/uid_op_services.csv', na.strings = c("NULL", "NA", NA))
uid_op_services <- data.table::fread(input = './data/uid_op_services.csv', na.strings = c("NULL", "NA", NA))
uid_op_services <- data.table::fread(input = './data/uid_op_services.csv', na.strings = c("NULL", "NA", NA))
setwd('D:/project/【SRV】网红项目/')
cat("load the data")
eid_info <- data.table::fread(input = './data/emp_info.csv', na.strings = c("NULL", "NA", NA))
uid_info <- data.table::fread(input = './data/uid_info.csv', na.strings = c("NULL", "NA", NA))
uid_op_services <- data.table::fread(input = './data/uid_op_services.csv', na.strings = c("NULL", "NA", NA))
setwd('D:/gitcode/CORP/OP_fashionicon')
cat("load the data")
eid_info <- data.table::fread(input = './data/emp_info.csv', na.strings = c("NULL", "NA", NA))
uid_info <- data.table::fread(input = './data/uid_info.csv', na.strings = c("NULL", "NA", NA))
uid_op_services <- data.table::fread(input = './data/uid_op_services.csv', na.strings = c("NULL", "NA", NA))
library(dplyr)
left_join(uid_info, eid_info)
left_join(uid_info, eid_info, by = NULL)
full_join(uid_info, eid_info)
full_join(uid_info, eid_info, by =1)
full_join(uid_info, eid_info, copy = TRUE)
full_join(uid_info, eid_info, by = c("1"="1"), copy = TRUE)
left_join(uid_info, eid_info, by = c("1"="1"), copy = TRUE)
full_join(uid_info, eid_info)
full_join(uid_info, eid_info, by = NULL)
nrow(eid_info)
rep(uid,nrow(eid_info))
rep(uid_info,nrow(eid_info))
rep(uid_info$uid,nrow(eid_info))
library(data.table)
setkey(eid_info, eid)
setkey(uid_info, uid)
setkey(uip_op_services, uid, eid)
setkey(eid_info, Eid)
setkey(uip_op_services, c(uid,eid))
setkey(uid_op_services, c(uid,eid))
setkey(uid_op_services, uid, eid)
uid_info[1]
uid_info$uid[1]
length(eid_info)
nrow(eid_info)
rbind(rep(uid_info, nrow(eid_info)))
as.data.frame(rbind(rep(uid_info, nrow(eid_info))))
as.data.frame(rbind(rep(uid_info[1,], nrow(eid_info))))
uid_eid_num <- as.data.frame(rbind(rep(uid_info[1,], nrow(eid_info))))
uid_eid_num <- as.data.frame(cbind(rep(uid_info[1,], nrow(eid_info))))
uid_eid_num <- rep(uid_info[1,], nrow(eid_info)))
uid_eid_num <- rep(uid_info[1,], nrow(eid_info))
uid_eid_num[1]
uid_eid_num[2]
uid_eid_num <- unlist(rep(uid_info[1,], nrow(eid_info)))
uid_eid_num[10]
uid_eid_num <- rbind(rep(uid_info[1,], nrow(eid_info)))
uid_eid_num <- rbindlist(rep(uid_info[1,], nrow(eid_info)))
uid_eid_num <- rbindlist(rep(uid_info[1,], nrow(eid_info)),use.names=TRUE))
uid_eid_num <- rbindlist(rep(uid_info[1,], nrow(eid_info)),use.names=TRUE)
rep(uid_info[1,], nrow(eid_info))
uid_eid_num <- rep(uid_info[1,], nrow(eid_info))
uid_eid_num[[isboss]]
uid_eid_num[isboss]
uid_eid_num$isboss
rbindlist
Crbindlist
uid_num <- rep(uid_info$uid[1], nrow(eid_info))
# fill missing columns, and match by col names
DT1 = data.table(A=1:3,B=letters[1:3])
DT2 = data.table(B=letters[4:5],C=factor(1:2))
l = list(DT1,DT2)
rbindlist(l, use.names=TRUE, fill=TRUE)
l
names(uid_info)
age <- rep(uid_info$gender[1], nrow(eid_info))
uid_transform <- cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss)
num_uid <- rep(uid_info$uid[1], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[1], nrow(eid_info))
num_grade <- rep(uid_info$grade[1], nrow(eid_info))
num_gender <- rep(uid_info$gender[1], nrow(eid_info))
num_age <- rep(uid_info$age[1], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[1], nrow(eid_info))
uid_transform <- cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss)
uid_transform <- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
options(stringAsFactors = F)
num_uid <- rep(uid_info$uid[1], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[1], nrow(eid_info))
num_grade <- rep(uid_info$grade[1], nrow(eid_info))
num_gender <- rep(uid_info$gender[1], nrow(eid_info))
num_age <- rep(uid_info$age[1], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[1], nrow(eid_info))
uid_transform <- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
View(uid_transform)
View(uid_transform)
for(i in 1:nrow(uid_info)){
num_uid <- rep(uid_info$uid[1], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[1], nrow(eid_info))
num_grade <- rep(uid_info$grade[1], nrow(eid_info))
num_gender <- rep(uid_info$gender[1], nrow(eid_info))
num_age <- rep(uid_info$age[1], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[1], nrow(eid_info))
uid_transform <<- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
}
for(i in 1:nrow(uid_info)){
num_uid <- rep(uid_info$uid[i], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[i], nrow(eid_info))
num_grade <- rep(uid_info$grade[i], nrow(eid_info))
num_gender <- rep(uid_info$gender[i], nrow(eid_info))
num_age <- rep(uid_info$age[i], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[i], nrow(eid_info))
uid_transform <<- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
}
View(uid_transform)
uid_transform_total <- NULL
names(uid_info)
for(i in 1:nrow(uid_info)){
num_uid <- rep(uid_info$uid[i], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[i], nrow(eid_info))
num_grade <- rep(uid_info$grade[i], nrow(eid_info))
num_gender <- rep(uid_info$gender[i], nrow(eid_info))
num_age <- rep(uid_info$age[i], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[i], nrow(eid_info))
uid_transform <- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
uid_transform_total <<- rbind(uid_transform,uid_transform_total)
}
options(stringsAsFactors = F)
setkey(eid_info, Eid)
setkey(uid_info, uid)
setkey(uid_op_services, uid, eid)
uid_transform_total <- NULL
names(uid_info)
for(i in 1:nrow(uid_info)){
num_uid <- rep(uid_info$uid[i], nrow(eid_info))
num_complaintimes <- rep(uid_info$complaintimes[i], nrow(eid_info))
num_grade <- rep(uid_info$grade[i], nrow(eid_info))
num_gender <- rep(uid_info$gender[i], nrow(eid_info))
num_age <- rep(uid_info$age[i], nrow(eid_info))
num_isboss <- rep(uid_info$isboss[i], nrow(eid_info))
uid_transform <- as.data.frame(cbind(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss))
uid_transform_total <<- rbind(uid_transform,uid_transform_total)
}
library(lubridate)
rm(num_uid*)
rm(num_uid, num_complaintimes, num_grade, num_gender, num_age, num_isboss, uid_transform)
sys.time()
Sys.time()
difftime(time1 = ymd_hms(eid_info$EntryTime), time2 = Sys.time())
eid_info$age <- difftime(time1 = ymd_hms(eid_info$Birthday), time2 = Sys.time())
head(ymd_hms(eid_info$Birthday))
View(eid_info)
head(ymd(eid_info$Birthday))
head(as.Date(eid_info$Birthday))
eid_info$age <- difftime(time1 = as.Date(eid_info$Birthday), time2 = Sys.time())
eid_info$age <- difftime(time2 = as.Date(eid_info$Birthday), time1 = Sys.time(), units = "year")
eid_info$age <- difftime(time2 = as.Date(eid_info$Birthday), time1 = Sys.time(), units = "weeks")
eid_info$age <- round(difftime(time2 = as.Date(eid_info$Birthday), time1 = Sys.time(), units = "weeks")/52,0)
eid_info$worktime <- round(difftime(time2 = as.Date(eid_info$EntryTime), time1 = Sys.time(), units = "weeks")/52,0)
eid_info$age <- as.integer(round(difftime(time2 = as.Date(eid_info$Birthday), time1 = Sys.time(), units = "weeks")/52,0))
eid_info$worktime <- as.integer(round(difftime(time2 = as.Date(eid_info$EntryTime), time1 = Sys.time(), units = "weeks")/52,0))
plot(eid_info$worktime)
qplot(eid_info$worktime)
plot(eid_info$worktime, type = 'I')
plot(eid_info$worktime, type = 'bar')
rm(DT1, DT2)
head(uid_info)
uid_eid_mapping <- filter(uid_transform_total%>%filter(uid %in% uid_canditie))
uid_eid_mapping <- uid_transform_total%>%filter(uid %in% uid_canditie)
uid_eid_mapping <- uid_transform_total%>%filter(num_uid %in% uid_canditie)
uid_canditie <- c('2031738135')
uid_eid_mapping <- uid_transform_total%>%filter(num_uid %in% uid_canditie)
uid_eid_mapping <- cbind(uid_transform_total%>%filter(num_uid %in% uid_canditie), eid_info%>%select(Eid, age, worktime, zodiac_uid, Gender)
head(uid_eid_mapping)
uid_eid_mapping <- cbind(uid_transform_total%>%filter(num_uid %in% uid_canditie), eid_info%>%select(Eid, age, worktime, zodiac_uid, Gender))
View(uid_eid_mapping)
uid_eid_mapping <- left_join(uid_eid_mapping, uid_op_services, by = c("num_uid"="uid", "Eid"="eid"), copy = F)
View(uid_op_services)
uid_canditie <- c('2031738135')
uid_eid_mapping <- cbind(uid_transform_total%>%filter(num_uid %in% uid_canditie), eid_info%>%select(Eid, age, worktime, zodiac_uid, Gender))
# join上uid和eid之间的服务关系；
uid_eid_mapping <- left_join(uid_eid_mapping, uid_op_services, by = c("num_uid"="uid", "Eid"="eid"), copy = F)
View(uid_eid_mapping)
head(uid_eid_mapping)
uid_eid_mapping <-> uid_eid_mapping%>%mutate(isgendermatch = match(num_gender, Gender))
uid_eid_mapping <- uid_eid_mapping%>%mutate(isgendermatch = match(num_gender, Gender))
View(uid_eid_mapping)
uid_eid_mapping <- uid_eid_mapping%>%mutate(isgendermatch = num_gender-Gender)
uid_eid_mapping <- uid_eid_mapping%>%mutate(isgendermatch = num_gender==Gender)
View(uid_eid_mapping)
View(uid_eid_mapping)
colname_2show <- c("totalscore", "num_uid", "num_complaintimes", "num_grade", "num_age", "num_gender", "Eid", "age", "worktime", "zodiac_uid", "Gender","positivelevel")
colname_rename <- c("totalscore", "UID", "UID_complaintimes", "UID_grade", "UID_age", "UID_gender", "UID_isboss","EID", "EID_age", "EID_workexperience", "EID_zodiacuids"," EID_Gender", "positivelevel")
colname_2show <- c("totalscore", "num_uid", "num_complaintimes", "num_grade", "num_age", "num_gender", "num_isboss", "Eid", "age", "worktime", "zodiac_uid", "Gender","positivelevel")
colname_rename <- c("totalscore", "UID", "UID_complaintimes", "UID_grade", "UID_age", "UID_gender", "UID_isboss","EID", "EID_age", "EID_workexperience", "EID_zodiacuids"," EID_Gender", "positivelevel")
setwd("D:/gitcode/CORP/OP_fashionicon")
load("./data/uid_eid.rData")
sys.time()
Sys.time()
install.packages("IRkernal")
